name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Login no Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}


      - name: Build da imagem
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/crud-app:latest ./backend

      - name: Push da imagem
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/crud-app:latest

  sonar-analysis:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Executar análise SonarQube no servidor remoto
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SONAR_HOST_URL }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker run -d --name sonarqube -p 8236:8241 sonarqube:community
            echo "Aguardando SonarQube iniciar..."
            sleep 60  # Tempo para o SonarQube subir completamente

            cd backend
            sonar-scanner \
              -Dsonar.projectKey=crud-node-app \
              -Dsonar.sources=. \
              -Dsonar.host.url=http://localhost:8236 \
              -Dsonar.login=admin \
              -Dsonar.password=admin

            RESULT=$(curl -s http://localhost:8236/api/qualitygates/project_status?projectKey=crud-node-app | jq -r .projectStatus.status)

            docker stop sonarqube
            docker rm sonarqube

            if [ "$RESULT" != "OK" ]; then
              echo "SonarQube falhou com status: $RESULT"
              exit 1
            fi

  deploy:
    needs: sonar-analysis
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Deploy remoto via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SONAR_HOST_URL }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker stop crud-app || true
            docker rm crud-app || true

            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/crud-app:latest
            docker run -d --name crud-app -p 8236:8241 ${{ secrets.DOCKERHUB_USERNAME }}/crud-app:latest
