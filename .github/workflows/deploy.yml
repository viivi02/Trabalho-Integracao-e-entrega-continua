name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Login no Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build da imagem
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/vivi:latest ./app

      - name: Push da imagem
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/vivi:latest

  sonar-analysis:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v3

      - name: Copiar arquivos para o servidor remoto
        uses: appleboy/scp-action@v0.1.4
        with:
          host: 201.23.3.86
          username: aluno
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "./*"
          target: "~/app"

      - name: Executar análise SonarQube no servidor remoto
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: 201.23.3.86
          username: aluno
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker run -d --name sonarqube-vivi -p 9000:9000 sonarqube
            sleep 60
            cd ~/app
            sonar-scanner \
              -Dsonar.projectKey=vivi-projeto \
              -Dsonar.sources=. \
              -Dsonar.host.url=http://localhost:9000 \
              -Dsonar.login=admin \
              -Dsonar.password=admin
            docker stop sonarqube-vivi && docker rm sonarqube-vivi

  deploy:
    needs: sonar-analysis
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Deploy remoto via SSH (sem docker-compose)
        uses: appleboy/ssh-action@master
        with:
          host: 201.23.3.86
          username: aluno
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker network create vivi-net || true

            docker stop vivi-mysql || true
            docker rm vivi-mysql || true

            docker run -d \
              --name vivi-mysql \
              --network vivi-net \
              -e MYSQL_ROOT_PASSWORD=senha \
              -e MYSQL_DATABASE=meubanco \
              -p 8237:3306 \
              mysql:8.0

            docker stop vivi || true
            docker rm vivi || true

            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/vivi:latest

            docker run -d \
              --name vivi \
              --network vivi-net \
              -e DB_HOST=vivi-mysql \
              -p 8238:5000 \
              ${{ secrets.DOCKERHUB_USERNAME }}/vivi:latest

            echo "=== Containers ativos após deploy ==="
            docker ps

            echo "=== Logs do container vivi (app) ==="
            docker logs vivi --tail 50 || echo "Container vivi não está rodando"

            echo "=== Logs do container vivi-mysql (db) ==="
            docker logs vivi-mysql --tail 50 || echo "Container vivi-mysql não está rodando"
